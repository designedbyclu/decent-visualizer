.bg-white.dark:bg-stone-900.shadow
  .max-w-7xl.mx-auto.py-6.px-4.sm:px-6.lg:px-8
    h1.text-3xl.font-bold.leading-tight.text-stone-900.dark:text-stone-100
      ' Search
.max-w-7xl.mx-auto.py-6.sm:px-6.lg:px-8
  = form_with(url: {action: :index}, method: :get) do |f|
    .shadow.sm:rounded-md.sm:overflow-hidden
      .p-4.bg-white.dark:bg-stone-800.space-y-6.sm:p-4
        .grid.grid-cols-12.gap-3
          - SearchController::FILTERS.each do |filter, options|
            - if options[:autocomplete]
              .col-span-6.md:col-span-3 data-autocomplete-url-value="#{autocomplete_search_index_path(filter: filter)}" data-autocomplete-selected-class="bg-emerald-300 bg-opacity-25" data-controller="autocomplete"
                = f.label filter, class: "block text-sm font-medium text-stone-700 dark:text-stone-300"
                - if options[:target]
                  = f.hidden_field options[:target], value: params[options[:target]], data: {autocomplete_target: "hidden"}
                = f.search_field filter, value: params[filter], class: "standard-input", data: {autocomplete_target: "input"}
                ul.list-group.absolute.mt-2.rounded-md.shadow-lg.bg-white.ring-1.ring-black.ring-opacity-5.z-10.max-h-96.overflow-y-auto data-autocomplete-target="results"
            - else
              .col-span-6.md:col-span-3
                = f.label filter, class: "block text-sm font-medium text-stone-700 dark:text-stone-300"
                = f.search_field filter, value: params[filter], class: "standard-input"
          .col-span-6.md:col-span-5
            = f.label :min_enjoyment, class: "block text-sm font-medium text-stone-700 dark:text-stone-300"
            .flex.items-center.mt-1 data-controller="range"
              - min = params[:min_enjoyment].presence || 0
              - hue = (124.0 / 100 * min.to_i).round
              .h-8.w-8.rounded-full style="background-color: hsl(#{hue}, 70%, 50%);" data-range-target="color"
                .text-white.py-1.text-center data-range-target="text"
                  = min
              = f.range_field :min_enjoyment, in: 0..100, value: min, allow_blank: true, class: "shot-range ml-2 grow dark:bg-stone-800", data: {action: "input->range#update"}
          .col-span-6.md:col-span-5
            = f.label :max_enjoyment, class: "block text-sm font-medium text-stone-700 dark:text-stone-300"
            .flex.items-center.mt-1 data-controller="range"
              - max = params[:max_enjoyment].presence || 100
              - hue = (124.0 / 100 * max.to_i).round
              .h-8.w-8.rounded-full style="background-color: hsl(#{hue}, 70%, 50%);" data-range-target="color"
                .text-white.py-1.text-center data-range-target="text"
                  = max
              = f.range_field :max_enjoyment, in: 0..100, value: max, class: "shot-range ml-2 grow dark:bg-stone-800", data: {action: "input->range#update"}
          .col-span-6.md:hidden
          .col-span-6.md:col-span-2
            label.block &nbsp;
            = f.submit "Search", class: "cursor-pointer py-2 px-4 border border-transparent block w-full shadow-sm md:text-sm font-medium rounded-md text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500"
  .mt-5
    = render "shots/list", shots: @shots, pagy: @pagy, include_person: true
