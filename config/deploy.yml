# Name of your application. Used to uniquely configure containers.
service: visualizer

# Name of the container image.
image: mrfoto/visualizer

# Deploy to these servers.
servers:
  web:
    - hvapp
  job:
    hosts:
      - hvapp
    cmd: bin/jobs

proxy:
  ssl: true
  host: kamal.visualizer.coffee

# Credentials for your image host.
registry:
  username: mrfoto
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: arm64

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
accessories:
  postgres:
    image: postgres:17
    host: hvdb
    port: 5432
    env:
      secret:
        - POSTGRES_PASSWORD
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
      - infrastructure/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    directories:
      - data:/var/lib/postgresql/data
